local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()

local Window = Rayfield:CreateWindow({
   Name = "Bubble Gum Simulator Infinity | Austin Scripts",
   Icon = "blinds",
   LoadingTitle = "Bubble Gum Simulator Infinity",
   LoadingSubtitle = "by Austin Scripts",
   Theme = "Default",

   ToggleUIKeybind = "K",

   ConfigurationSaving = {
      Enabled = false,
      FolderName = nil,
      FileName = "BubbleGumConfig"
   },

   Discord = {
      Enabled = true,
      Invite = "tMTpDsGcdT",
      RememberJoins = true
   },
   KeySystem = false,
})

--// Services \\--
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

--// Vars \\--
local RemoteFires = {
   "ClaimAllPlaytime",
   "HatchPowerupEgg, Season 3 Egg, 1",
   "Teleport, Location"

}

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")
local Remote = ReplicatedStorage:WaitForChild("Shared"):WaitForChild("Framework"):WaitForChild("Network"):WaitForChild("Remote"):WaitForChild("RemoteEvent")
local Worlds = {
   Overworld = Workspace:WaitForChild("Worlds"):WaitForChild("The Overworld"),
   Minigame = Workspace:WaitForChild("Worlds"):WaitForChild("Minigame Paradise")
}

local AutoSeason = false
local AutoPickup = false
local AutoPlaytime = false

local petPath = playerGui:WaitForChild("ScreenGui"):WaitForChild("Inventory"):WaitForChild("Frame").Inner.Pets.Main.ScrollingFrame.Pets

--// Tabs \\--
local miscTab = Window:CreateTab("Misc")
local hatchTab = Window:CreateTab("Hatch")
local teleportTab = Window:CreateTab("Teleports")

--// misc \\--
teleportTab:CreateLabel("Info")

local Divider = miscTab:CreateDivider()
Divider:Set(true)


local autoSeason = miscTab:CreateToggle({
   Name = "Auto Season",
   Flag = "ClaimSeason",
   CurrentValue = false,
   Callback = function(Value)
      AutoSeason = Value
      while AutoSeason do
         Remote:FireServer("ClaimSeason")
         task.wait(0.5)
      end
   end,
})

local autoPickup = miscTab:CreateToggle({
   Name = "Auto Pickups",
   Flag = "ClaimPickup",
   CurrentValue = false,
   Callback = function(Value)
      AutoPickup = Value

      while AutoPickup do
         local rendered = workspace:FindFirstChild("Rendered")
         if rendered then
            -- Reuse if already renamed
            local collectablesFolder = rendered:FindFirstChild("Collectables")

            if not collectablesFolder then
               local chunkerFolder = rendered:FindFirstChild("Chunker")
               if chunkerFolder then
                  for _, possible in ipairs(chunkerFolder:GetChildren()) do
                     if possible:IsA("Folder") then
                        for _, item in ipairs(possible:GetChildren()) do
                           if string.find(item.Name, "%d") then
                              possible.Name = "Collectables"
                              collectablesFolder = possible
                              break
                           end
                        end
                        if collectablesFolder then break end
                     end
                  end
               end
            end

            -- Now loop and collect pickups
            if collectablesFolder then
               for _, item in ipairs(collectablesFolder:GetChildren()) do
                  if item:IsA("Model") or item:IsA("Part") then
                     Remote:FireServer("CollectPickup", item)
                  end
               end
            end
         end
         task.wait(1)
      end
   end,
})

local destroyGui = miscTab:CreateButton({
    Name = "Destroy UI",
    Callback = function()
        Rayfield:Destroy()
    end,
})

--// teleport \\--
teleportTab:CreateLabel("The Overwold")

teleportTab:CreateButton({
    Name = "Spawn",
    Callback = function()
        Remote:FireServer("Teleport", "Workspace.Worlds.The Overworld.PortalSpawn")
    end,
})

teleportTab:CreateButton({
    Name = "Floating Island",
    Callback = function()
        Remote:FireServer("Teleport", "Workspace.Worlds.The Overworld.Islands.Floating Island.Island.Portal.Spawn")
    end,
})

teleportTab:CreateButton({
    Name = "Outer Space",
    Callback = function()
        Remote:FireServer("Teleport", "Workspace.Worlds.The Overworld.Islands.Outer Space.Island.Portal.Spawn")
    end,
})

teleportTab:CreateButton({
    Name = "Twilight",
    Callback = function()
        Remote:FireServer("Teleport", "Workspace.Worlds.The Overworld.Islands.Twilight.Island.Portal.Spawn")
    end,
})

teleportTab:CreateButton({
    Name = "The Void",
    Callback = function()
        Remote:FireServer("Teleport", "Workspace.Worlds.The Overworld.Islands.The Void.Island.Portal.Spawn")
    end,
})

teleportTab:CreateButton({
    Name = "Zen",
    Callback = function()
        Remote:FireServer("Teleport", "Workspace.Worlds.The Overworld.Islands.Zen.Island.Portal.Spawn")
    end,
})

teleportTab:CreateDivider()

teleportTab:CreateLabel("Minigame Paradise")

teleportTab:CreateButton({
    Name = "Spawn",
    Callback = function()
        Remote:FireServer("Teleport", "Workspace.Worlds.Minigame Paradise.PortalSpawn")
    end,
})

teleportTab:CreateButton({
    Name = "Floating Island",
    Callback = function()
        Remote:FireServer("Teleport", "Workspace.Worlds.The Overworld.Islands.Floating Island.Island.Portal.Spawn")
    end,
})

teleportTab:CreateButton({
    Name = "Outer Space",
    Callback = function()
        Remote:FireServer("Teleport", "Workspace.Worlds.The Overworld.Islands.Outer Space.Island.Portal.Spawn")
    end,
})

teleportTab:CreateButton({
    Name = "Twilight",
    Callback = function()
        Remote:FireServer("Teleport", "Workspace.Worlds.The Overworld.Islands.Twilight.Island.Portal.Spawn")
    end,
})

teleportTab:CreateButton({
    Name = "The Void",
    Callback = function()
        Remote:FireServer("Teleport", "Workspace.Worlds.The Overworld.Islands.The Void.Island.Portal.Spawn")
    end,
})

teleportTab:CreateButton({
    Name = "Zen",
    Callback = function()
        Remote:FireServer("Teleport", "Workspace.Worlds.The Overworld.Islands.Zen.Island.Portal.Spawn")
    end,
})
